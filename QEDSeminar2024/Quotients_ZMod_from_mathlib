-- import Mathlib
import Mathlib.Data.ZMod.Basic
import Mathlib.Algebra.CharP.Basic

variable (n : ℕ) 

example : (n : ZMod n) = 0 := by
  apply CharP.cast_eq_zero

example (a : ZMod 12) : a + 12 = a := by
  have h: (12 : ZMod 12) = 0 := by
    apply CharP.cast_eq_zero
  rw [h]  
  ring

example (a : ZMod n) : a + n = a := by
  simp only [CharP.cast_eq_zero, add_zero]


example (a : ZMod 12) : a*12 = 0 := by
  have h: (12 : ZMod 12) = 0 := by
    apply CharP.cast_eq_zero
  rw [h]  
  ring
  
example (a : ZMod n) : a*n = 0 := by
  simp only [CharP.cast_eq_zero, mul_zero]


theorem Int.isDomain : IsDomain ℤ := {
  mul_left_cancel_of_ne_zero := _
  mul_right_cancel_of_ne_zero := _
  exists_pair_ne := _
}

theorem ZMod.isDomain (p : ℕ) (hp : p.Prime) : IsDomain (ZMod p) := {
  mul_left_cancel_of_ne_zero := _
  mul_right_cancel_of_ne_zero := _
  exists_pair_ne := _
}
